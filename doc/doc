1. How large do you expect the graphs to be? 

2. What kind of graph queries do you want to support?

     1. reachable from {node} where type = {type} , attribute = {attribute} , name = {name} , max depth = {integer}
     2. 

3. What data structures are used to encode the graphs?
   (e.g., a node and an edge tables, adjacency lists, sparse matrix encoding of an adjacency matrix, ...)?

   A series of data files holding a certain number of data elements (nodes and relationships) each separated by a special character.
   Each data element has a unique, self-generated ID.
   A series of "mapping" files that contain the node and relationship ID->(File #, Offset into that file)
   Another series of "mapping" files containing relationship meta-data of the following format.

                      1     2        3        4
                     +-+--------+--------+--------+
                     | |        |        |        |
                     +-+--------+--------+--------+

    Bit Sections           Purpose             Length(bits)
         1          active bit                      1
         2          previous relationship          32  testing - 8
         3          next relationship              32  testing - 8
         4          relationship ID                32  testing - 8

    Periodically reorder files with "reorder" command.
    Reorder nodes using decreasing sort by node centrality measure.
    Reorder relationships by grouping together and ordering by the implicit adjacency lists created by the relationship meta-data blocks.