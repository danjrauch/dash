1. How large do you expect the graphs to be?

   1. 0.5 gigabytes of raw data

2. What kind of graph queries do you want to support?

   1. (node:type:... {attribute: ..., })-[:rel_type]-(etc etc)-[:etc etc] where max depth = {i}
                     | if any point = '', return all qualified nodes fitting that criteria.
   2. structural statistics about the graph.

3. What data structures are used to encode the graphs?
   (e.g., a node and an edge tables, adjacency lists, sparse matrix encoding of an adjacency matrix, ...)?

   A series of data files holding a certain number of data elements (nodes and relationships) each separated by a special character.
   Each data element has a unique, self-generated ID.
   A series of "mapping" csv file contain the node and relationship (ID, Filename, Offset #) mappings.
   Another series of "mapping" files containing relationship meta-data of the following format.

                      1     2         3         4         5
                     +-+---------+---------+---------+---------+
                     | |         |         |         |         |
                     +-+---------+---------+---------+---------+

    Bit Sections           Purpose             Length(bits)
         1          active bit                      1
         2          previous relationship          32
         3          next relationship              32
         4          relationship ID                32
         5          node ID                        32

    Periodically reorder files with "reorder" command.
    Reorder nodes using decreasing sort by node centrality measure.
    Reorder relationships by grouping together and ordering by the implicit adjacency lists created by the relationship meta-data blocks.